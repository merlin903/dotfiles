#+TITLE: System configuration for OSX with Homebrew

* Table of Contents
:PROPERTIES:
:TOC: this
:END:

* Systems
** Base Configuration

This is the base configuration that's shared between all of my computers.

*** Install Homebrew

Homebrew allows us to install UNIX programs similar to =apt-get= on Linux systems

#+begin_src sh :tangle .config/homebrew/shared.sh :shebang #!/bin/sh

# NOTE: This file is generated from ~/Development/sametjan/dotfiles/System.org.
# Install Homebrew
/usr/bing/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"

#+end_src

*** Taps

Not everything we use is in the base Homebrew tap, so let's add them

#+begin_src sh :tangle .config/homebrew/shared.sh :shebang #!/bin/sh

brew tap d12frosted/emacs-plus # Better Emacs
brew tap homebrew/cask # MacOS apps
brew tap homebrew/cask-fonts # Fonts
brew tap homebrew/cask-versions # Alternate versions

#+end_src

*** GNU Utiltiies

The GNU utitilies that come with MacOS are outdated or customized by Apple. Let's install the GNU versions.

#+begin_src sh :tangle .config/homebrew/shared.sh :shebang #!/bin/sh

brew install coreutils
brew install moreutils
brew install findutils
brew install gnu-sed

#+end_src

*** Shells

Install newer versions of =bash= and =zsh=, along with the =fish= shell, and add them to =/etc/shells=

#+begin_src sh :tangle .config/homebrew/shared.sh :shebang #!/bin/sh

brew install bash
brew install bash-completion

brew install zsh
brew install fish

echo $(brew --prefix)/bin/bash | sudo tee -a /etc/shells
echo $(brew --prefix)/bin/zsh | sudo tee -a /etc/shells
echo $(brew --prefix)/bin/fish | sudo tee -a /etc/shells

#+end_src

** Per-system-configuration
*** Soundwave
*** Hulu
* Dotfiles Management

** Syncing

*.bin/sync-dotfiles*
#+begin_src sh :tangle .bin/sync-dotfiles :shebang #!/bin/sh

# Sync dotfiles repo and ensure that dotfiles are tangled correctly afterward

GREEN='\033[1;32m'
BLUE='\033[1;34m'
RED='\033[1;30m'
NC='\033[0m'

# Navigate to the directory of this script (generally ~/.dotfiles/.bin)
cd $(dirname $(greadlink -f $0))
cd ..

echo
echo -e "${BLUE}Saving Org buffers if Emacs is running...${NC}"
emacsclient -u -e "(org-save-all-org-buffers)" -a "echo 'Emacs is not currently running'"

echo -e "${BLUE}Stashing existing changes...${NC}"
stash_result=$(git stash push -m "sync-dotfiles: Before syncing dotfiles")
needs_pop=1
if [ "$stash_result" = "No local changes to save" ]; then
    needs_pop=0
fi

echo -e "${BLUE}Pulling updates from dotfiles repo...${NC}"
echo
git pull origin master
echo

if [[ $needs_pop -eq 1 ]]; then
    echo -e "${BLUE}Popping stashed changes...${NC}"
    echo
    git stash pop
fi

unmerged_files=$(git diff --name-only --diff-filter=U)
if [[ ! -z $unmerged_files ]]; then
   echo -e "${RED}The following files have merge conflicts after popping the stash:${NC}"
   echo
   printf %"s\n" $unmerged_files  # Ensure newlines are printed
else
    update-dotfiles
fi

#+end_src


** Updating

Updating dotfiles requires running a scriopt in Emacs to loop over all of my literate configuration =.org= 
files and run =org-babel-tangle-file= to make sure all of my configuration files are up to date.

*.bin/update-dotfiles*
#+begin_src sh :tangle .bin/update-dotfiles :shebang #!/bin/sh

# Navigate to the directory of this script (generally ~/Development/sametjan/dotfiles/.bin)
cd $(dirname $(greadlink -f $0))
cd ..

# The heavy lifting is done by an Emacs script
emacs -Q --script ~/.emacs.d/tangle-dotfiles.el

# Make sure any running Emacs instance gets updated settings
# emacsclient -e '(load-file "~/.emacs.d/per-system-settings.el")' -a "echo 'Emacs is not currently running'"

#+end_src

*.emacs.d/tangle-dotfiles.el*
#+begin_src emacs-lisp :tangle .emacs.d/tangle-dotfiles.el

  (require 'org)

  ;; Don't ask when evaluating code blocks
  (setq org-confirm-babel-evaluate nil)

  (let* ((dotfiles-path (expand-file-name "~/Development/sametjan/dotfiles/"))
	 (org-files (directory-files dotfiles-path nil "\\.org$")))
    (dolist (org-file org-files)
      (unless (equal org-file "README.org")
	(message "\n033[1;32mUpdating $s\033[0m\n" org-file)
	(org-babel-tangle-file (expand-file-name org-file dotfiles-path)))))

#+end_src
* System Installation

*.bin/symlink-dotfiles*
